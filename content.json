{"meta":{"title":"拜雨の技博","subtitle":"Java，Android，前端","description":"热衷于学习Java，Android，前端技术","author":"刘鹏程","url":"http://www.baiyuas.com"},"pages":[{"title":"相册","date":"2017-09-11T03:39:01.000Z","updated":"2017-09-11T07:05:52.000Z","comments":true,"path":"photos/index.html","permalink":"http://www.baiyuas.com/photos/index.html","excerpt":"","text":""}],"posts":[{"title":"鸟哥私房菜笔记二","slug":"20180213","date":"2018-02-13T06:21:23.000Z","updated":"2018-02-13T07:48:13.091Z","comments":true,"path":"2018/02/13/20180213/","link":"","permalink":"http://www.baiyuas.com/2018/02/13/20180213/","excerpt":"文件权限的补充对于这个x，我一开始的理解是错误的。看到rwx，我的理解觉得是可执行文件的执行权限。然，否也。这个x不光是文件的可执行权限，同时还包含cd命令的权限，也就是说你是否可以切换到该目录下。举个例子：首先使用root用户切换到/tmp目录下 cd /tmp 创建一个目录test，然后修改该文件夹权限组与其他用户只有r权限 mkdir test chomd -R o=rwx,g=r,o=r 这个时候如果切换到baiyuas这个用户使用命令cd test，则会提示 bash: cd: test/: Permission denied","text":"文件权限的补充对于这个x，我一开始的理解是错误的。看到rwx，我的理解觉得是可执行文件的执行权限。然，否也。这个x不光是文件的可执行权限，同时还包含cd命令的权限，也就是说你是否可以切换到该目录下。举个例子：首先使用root用户切换到/tmp目录下 cd /tmp 创建一个目录test，然后修改该文件夹权限组与其他用户只有r权限 mkdir test chomd -R o=rwx,g=r,o=r 这个时候如果切换到baiyuas这个用户使用命令cd test，则会提示 bash: cd: test/: Permission denied Linux下的文件目录我们切换到根目录/目录下，执行ls -al命令看到如下文件目录： /bin -&gt; usr/bin 多放置执行文件目录 /boot 开机使用的文件目录，包含开机所需要的配置文件 /dev 包含了所有Linux系统中的外部设备 /etc 系统主要的配置文件目录 * /etc/init.d/ 所有服务的启动脚本 /home 家目录 /lib -&gt; usr/lib 指令所需要的函式库，主要的是/lib/modules /lib64 -&gt; usr/lib64 64位系统中的函式库 /media 挂载的软盘、光盘、DVD等设备 /mnt 外置设备 /opt 安装第三方软件的目录,一般会安装在 /usr/local/目录下 /proc 虚拟文件目录，放置的数据存放在内容中 /root 超级管理员的家目录 /sbin -&gt; usr/sbin root用户指令依赖库 /srv service的缩写，网络服务启动后所需要的数据目录，例如网页数据可以存放在/srv/www/目录下 /sys 功能类似/proc目录 /tmp 临时目录，重要数据库不可以存放 /usr /var Linux下的文件目录就是一个树形结构，如下图(图片来自鸟哥私房菜) 容混淆的概念 /usr 是Unix Software Resources的缩写，不是user的缩写 绝对路径和相对路径这里介绍个知识点， . 代表当前目录， .. 代表上一级目录。 - 代表前一个工作目录，比如，你当前在/usr/local/目录下，然后使用命令cd /home/baiyuas/你会切换到/home/baiyuas/目录下，如果你想在返回到/usr/local/目录下，可以使用cd -。 ~ 代表家目录 ~userxx 代表userxx用户的家目录 目录相关的命令 cd切换目录命令 pwd [-P]显示当前路径，-P显示当前确实的路径而非link的路径 mkdir [-mp]创建目录 -m 创建目录时候增加权限mkdir -m 777 abc。-p 递归创建目录，可以创建多层目录mkdir -p abc/ccc/a rmdir -[p]删除空目录 echo $PATH查看当前环境变量信息 文件目录相关的命令 cp [-aipr]-a 文件所有信息都复制过去-i 如果文档存在提示是否覆盖-p 连同文档树形一起复制过去-r 复制目录使用对于这个命令，我之前一直有个问题，比如有个文件夹/home/baiyuas/ccc/，我想把文件夹下所有复制到/tmp/ccc/下，但是/tmp/目录下没有ccc,学习后发现so easy. cp -r /home/baiyuas/ccc/ /tmp/ccc rm [-r]-r 递归删除，有个特别情况，比如有个文件名称为-aaa-，这时候删除该文件就在文件前添加当前目录符号，使用命令rm ./-aaa- mv [-fiu]-f 如果目标文件存在则覆盖-i 如果目标文件存在，提示是否覆盖-u 若目标文件存在，且比source比较新，才会升级 rename修改文件名命令，可以批量修改 ? 可替代单个字符* 可替代多个字符[charset] 可替代charset集中的任意单个字符 例如：在/home/baiyuas/file/目录下有文件file1,file2..file10rename file newfile newfile0?命令会把file1, file2…file10重命名为newfile1,newfile2…newfile10,然后在重命名为newfile01,newfile02…newfile010","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.baiyuas.com/categories/Linux/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://www.baiyuas.com/tags/笔记/"}]},{"title":"鸟哥私房菜笔记一","slug":"20180209","date":"2018-02-09T11:50:38.000Z","updated":"2018-02-09T11:58:31.962Z","comments":true,"path":"2018/02/09/20180209/","link":"","permalink":"http://www.baiyuas.com/2018/02/09/20180209/","excerpt":"基本命令显示日期命令 date &gt; date 显示当前日期 &gt; date +%Y/%m/%d 格式化显示日期 显示日历命令 cal &gt; cal 显示当前月份的日历 &gt; cal 2018 显示指定年份的日历，全年12个月都会显示 &gt; cal [options] [[[day] month] year] 计算器 bc bc 进入计算器模式 退出命令 Ctrl+D 文本编辑 nano,打开文件后底部都有提示操作信息","text":"基本命令显示日期命令 date &gt; date 显示当前日期 &gt; date +%Y/%m/%d 格式化显示日期 显示日历命令 cal &gt; cal 显示当前月份的日历 &gt; cal 2018 显示指定年份的日历，全年12个月都会显示 &gt; cal [options] [[[day] month] year] 计算器 bc bc 进入计算器模式 退出命令 Ctrl+D 文本编辑 nano,打开文件后底部都有提示操作信息 文件权限Linux下的文件都是有权限控制，每个文件都有所属的用户和群组，非这个文件的所属用户或者群组是否不可以访问该文件。通过命令 &gt; ls -al 可以列出文件的详细信息。 [baiyuas@localhost file]$ ls -al 权限 | 连接数 |拥有者 | 群组 | 文件容量|日期 |档名 drwxrwxr-x. 2 baiyuas baiyuas 64 Feb 7 22:44 . drwx------. 3 baiyuas baiyuas 97 Feb 7 23:14 .. -rw-rw-r--. 1 baiyuas baiyuas 4096 Feb 7 19:59 by.db -rw-r--r--. 1 baiyuas baiyuas 40960 Feb 7 22:44 hb.db -rw-rw-r--. 1 baiyuas baiyuas 14672 Feb 7 23:34 hb.sql -rw-r--r--. 1 baiyuas baiyuas 118784 Feb 7 01:54 test_hb.db 这里说下权限 - rwx — — 第一个代表文件类型 【d】 表示是目录【-】 表示文件【l】 表示连接 之后的每三个一组，分表代表，文件拥有者的权限，同组的权限，其他的权限 【r】 读取文件权限【w】 修改文件的权限【x】 可执行权限 举个栗子：有三个用户a, b, c，用户a和用户b是同组groupab中的用户，现在a用户登录查看文件详情 看到如下： -rw-rw-r–. 1 a groupab 14672 Feb 7 23:34 hb.sql 这个时候，a对该文件有读写权限，b因为和a在同一个组所以也可以读写该文件。但是c用户只有读的权限，不可以修改该文件。如果权限是 -rw-r–r–则b用户也不可以修改，只能读取该文件 权限的修改介绍来文件的权限后，我们会问如何修改权限呢？这里介绍三个命令 chgrp ：改变文件所属群组 chown ：改变文件拥有者 chmod ：改变文件的权限, SUID, SGID, SBIT等等的特性 chgrp [-R] groupname file/dir..该命令修改文件或者文件夹所属组，-R代表递归操作，会将要修改的目录以及其子孙目录一起修改所属的组 chown [-R] owner[:groupname] file/dir…该命令是修改文件所有者[以及用户组]，例如 chown -R baiyuas hb.db hb.db 的用户将会更换为baiyuas用户 chmod [-R] xyz file/dir…该命令是修改文件权限，这里讲个小点，rwx 分别用数字 4，2，1对应。举个栗子如果权限是这个样子-rw-rw----也就是用户和用户组有读写权限，现在想让用户组只能有读取权限，就需要使用命令 chmod 640 filename 就可以修改权限啦。如果你嫌这个太麻烦，那可以使用u,g,o,a来处理 chmod u=rw,g=r filenamechmod a+w filenaem //将所有用户赋予写权限","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.baiyuas.com/categories/Linux/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://www.baiyuas.com/tags/笔记/"}]},{"title":"Jdk8 笔记一","slug":"Jdk8-笔记","date":"2018-02-01T06:28:44.000Z","updated":"2018-02-01T10:15:03.460Z","comments":true,"path":"2018/02/01/Jdk8-笔记/","link":"","permalink":"http://www.baiyuas.com/2018/02/01/Jdk8-笔记/","excerpt":"","text":"用法：12345List&lt;Apple&gt; apples = new ArrayList&lt;&gt;();apples.add(new Apple(100, &quot;red&quot;));apples.add(new Apple(20, &quot;yellow&quot;));apples.add(new Apple(10, &quot;green&quot;));List&lt;Apple&gt; filterList = apples.stream().filter(Apple::isGreen).collect(Collectors.toList()); 这是一个简单的jdk8中流的操作。将List转化为stream,之后过滤Apple是绿色的输出结果： [Apple{weight=100, color=’red’}, Apple{weight=20, color=’yellow’}, Apple{weight=10, color=’green’}]","categories":[{"name":"Java进阶","slug":"Java进阶","permalink":"http://www.baiyuas.com/categories/Java进阶/"}],"tags":[{"name":"jdk","slug":"jdk","permalink":"http://www.baiyuas.com/tags/jdk/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-12-03T16:13:52.913Z","updated":"2017-09-11T06:52:44.000Z","comments":true,"path":"2017/12/04/hello-world/","link":"","permalink":"http://www.baiyuas.com/2017/12/04/hello-world/","excerpt":"你好，本博客基于hexo创建，记录自己技术学习的点滴","text":"你好，本博客基于hexo创建，记录自己技术学习的点滴 hexo配置地址https://hexo.io/zh-cn/docs/configuration.html","categories":[{"name":"杂类","slug":"杂类","permalink":"http://www.baiyuas.com/categories/杂类/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.baiyuas.com/tags/hexo/"},{"name":"配置","slug":"配置","permalink":"http://www.baiyuas.com/tags/配置/"}]},{"title":"进阶之旅(深入理解JVM笔记)-自动内存管理","slug":"进阶之旅(深入理解JVM笔记)-自动内存管理","date":"2017-09-18T02:11:03.000Z","updated":"2017-10-30T09:25:52.000Z","comments":true,"path":"2017/09/18/进阶之旅(深入理解JVM笔记)-自动内存管理/","link":"","permalink":"http://www.baiyuas.com/2017/09/18/进阶之旅(深入理解JVM笔记)-自动内存管理/","excerpt":"这段时间将会学习JVM的相关知识，深入理解JVM是一本不错的介绍JVM的书籍，所以这个阶段就重这本书入手，深入研究下JVM的原理和机制，这对于在代码中对于内存的处理会有相当大的好处","text":"这段时间将会学习JVM的相关知识，深入理解JVM是一本不错的介绍JVM的书籍，所以这个阶段就重这本书入手，深入研究下JVM的原理和机制，这对于在代码中对于内存的处理会有相当大的好处 自动内存管理主要从下面四章来学习 一、Java内存区域与内存溢出异常&emsp;&emsp;我们的程序在被虚拟机执行的时候，Java虚拟机会将它所管理的内存划分不同的区域。不同的区域负责不同的功能。 运行时数据区域 上图展示了JVM运行时的内存区域,红色区域是每个线程私有的内存区域，其他是线程共享的内存区域 程序计数器程序计数器是记录程序运行到哪里，下一步该执行哪步操作。程序计数器是线程级别的，所以每一个线程都会有一个独立的程序计数器，CPU在切换线程的时候计数器可以记录程序执行位置，在重新切换回来时候可以在原有位置继续执行，各个线程之间的计数器互不影响。如果执行的是Java方法，则计数器记录的是正在执行的虚拟机字节码指令的地址，如果是本地方法，则计数器记录的是空。程序计数器是唯一一个不会出现OutOfMemoryErro异常的区域 Java虚拟机栈Java虚拟机栈描述的是Java方法执行的内存模型：每个方法被执行都会创建一个栈帧用来存储局部变量表、操作栈、动态链接、方法出口等信息。每个方法从调用到完成的过程就对应一个栈帧在虚拟机栈中从入栈到出栈的过程局部变量表存放了编译期可知的基本数据类型、对象引用和retrunAddress类型 Java虚拟机栈中规定了两种内存状况: 1. StackOverflowError异常线程请求的栈深度大于虚拟机允许的深度抛出StackOverflowError异常 2. OutOfMemoryError异常对于可以动态扩展的虚拟机栈在申请不到足够的内存时候抛出OutOfMemoryError异常 本地方法栈本地方法栈与Java虚拟机栈类似，不同的是Java虚拟机栈执行的是Java方法服务，本地方法栈为虚拟机使用到的Native方法服务 Java堆Java堆是被所有线程共享的内存区域，是Java虚拟机管理的内存中最大的一块。此内存区域存放的是对象实例，对象实力都在该区域分配内存。Java堆区域是GC垃圾回收器管理的主要区域Java堆处于物理上连续不断的内存空间中，只要逻辑上是连续的即可。如果堆内没有完成实例分配，并且堆也无法在扩展时，将会抛出OutOfMemoryError异常 方法区方法区也是各个线程共享的区域，主要存放已被虚拟机加载的类信息、常量、静态变量、即使编译后的代码等数据。方法区垃圾回收的主要目标是针对常量池的回收和对类型的卸载。 运行时常量池是方法区的一部分,用于存放编译期生成的各种字面量和符号引用，这部分内容是在类加载后存放到常量池中。运行时常量池另外一个特性-动态性。Java语言并不要求常量一定只能在编译期产生，运行期间也可能将新的常量放入池中，这种特性用的比较多的是String的intern()方法 当方法区无法满足内存分配的需求时，将会抛出OutOfMemoryError异常 以上关于运行时数据区域说明有个博客例子说明的很清晰，可以参考下:http://www.cnblogs.com/dingyingsi/p/3760730.htmlhttp://www.cnblogs.com/zhulin-jun/p/5753928.html 对象创建虚拟机遇到一个new指令后，首先检查这个指令在常量池中是否可以定位到一个类的符号引用,并且检查这个符号引用代表的类是否加载、解析和初始化。如果没有则需要先执行类加载过程，类加载完成后虚拟机给新生对象分配内存，对于Java堆中规整的内存(已使用和未使用的内存顺序排列，没有相互交错)，则移动内存指针来分配内存，对于非规整的内存需要虚拟机维护的列表来分配。 内存分配完成后，虚拟机需要将分配的内存空间都初始化为零值，接下来虚拟机需要对对象进行必要的设置，包括对象是哪个类的实例、如何才能找到类的元数据信息等。这样一个新对象则创建完成，后续就是代码执行过程。 二、垃圾回收器与内存分配策略三、虚拟机性能监控与故障处理工具四、调优案例分析与是实战参考： Feng_zhulin 深入理解JVM(豆瓣) JVM 内存初学 (堆(heap)、栈(stack)和方法区(method) )","categories":[{"name":"Java进阶","slug":"Java进阶","permalink":"http://www.baiyuas.com/categories/Java进阶/"},{"name":"JVM","slug":"Java进阶/JVM","permalink":"http://www.baiyuas.com/categories/Java进阶/JVM/"}],"tags":[{"name":"JVM","slug":"JVM","permalink":"http://www.baiyuas.com/tags/JVM/"},{"name":"自动内存管理","slug":"自动内存管理","permalink":"http://www.baiyuas.com/tags/自动内存管理/"}]},{"title":"进阶之旅-认识JDK","slug":"进阶之旅-认识JDK","date":"2017-09-12T03:32:47.000Z","updated":"2017-09-18T01:58:50.000Z","comments":true,"path":"2017/09/12/进阶之旅-认识JDK/","link":"","permalink":"http://www.baiyuas.com/2017/09/12/进阶之旅-认识JDK/","excerpt":"学习Java这么久，从来没有系统的研究过，都是用什么搞什么。趁着现在时间整理下。 Java特性 体积小。 主要体现在生成的可执行代码小 与平台无关 这个主要体现在JVM上。JVM具有可移植性，同时JVM又为Java可执行文件提供的运行环境，所以Java也就成为了可以在不同平台上运行的特点 更加简单的多线程支持 Java屏蔽的很多复杂的概念编码，包括临界区和信号量等，这就使得Java线程编程变的更加简单 动态特性 PS：这个Java特性一般面试时候会问到，很多大公司除了问一些纯技术知识外还会问一些理解类的问题，这个也算其中之一吧","text":"学习Java这么久，从来没有系统的研究过，都是用什么搞什么。趁着现在时间整理下。 Java特性 体积小。 主要体现在生成的可执行代码小 与平台无关 这个主要体现在JVM上。JVM具有可移植性，同时JVM又为Java可执行文件提供的运行环境，所以Java也就成为了可以在不同平台上运行的特点 更加简单的多线程支持 Java屏蔽的很多复杂的概念编码，包括临界区和信号量等，这就使得Java线程编程变的更加简单 动态特性 PS：这个Java特性一般面试时候会问到，很多大公司除了问一些纯技术知识外还会问一些理解类的问题，这个也算其中之一吧 Java不同版本的特性比较 JDK1.5 JDK1.6 JDK1.7 JDK1.8 自动装箱与拆箱 Web服务元数据 switch中可以使用字串了 允许在接口中有默认方法实现 枚举 脚本语言支持 即泛型实例化类型自动推断 Lambda表达式 静态导入 JTable的排序和过滤 新增一些取环境信息的工具方法 函数式接口 可变参数 更简单,更强大的JAX-WS Boolean类型反转，空指针安全,参与位运算 内置函数式接口 内省 轻量级Http Server 两个char间的equals Streams for循环 嵌入式数据库 Derby map集合支持E:\\DevelopTool\\gradle\\gradle-4.1-all\\gradle-4.1\\bin并发请求，且可以写成 Map map = {name:”xxx”,age:18}; Parallel Streams 泛型 时间日期API Map Annotations 除了上面的还有一些补充知识：在JDK1.1中使用JavaBean、RMI、数字签名、在JDK1.2中引入了Swing、2D API在JDK1.3中增加了java.math包在JDK1.4中增加了java.util.regex正则包 由此我们可以看出在JDK1.5之后JDK才相对完善了些。我们现在使用的JDK一般都是1.6之上Java技术体系分为四个部分： JavaCard:支持一些Java小程序(Applet) JavaME:支持Java程序运行在移动平台 JavaSE:支持面向桌面应用的开发 JavaEE:支持面向企业应用，如ERP、CRM 而我们常用的主要是JavaSE和JavaEE","categories":[{"name":"Java进阶","slug":"Java进阶","permalink":"http://www.baiyuas.com/categories/Java进阶/"}],"tags":[{"name":"JDK","slug":"JDK","permalink":"http://www.baiyuas.com/tags/JDK/"},{"name":"版本差异","slug":"版本差异","permalink":"http://www.baiyuas.com/tags/版本差异/"}]},{"title":"进阶之旅-专有名词整理","slug":"进阶之旅-专有名词整理","date":"2017-09-12T03:28:15.000Z","updated":"2017-09-19T03:12:22.000Z","comments":true,"path":"2017/09/12/进阶之旅-专有名词整理/","link":"","permalink":"http://www.baiyuas.com/2017/09/12/进阶之旅-专有名词整理/","excerpt":"经常在看博客或者面试时候，总会见到一些专有名词的缩写，比如：OOP、RMI等。搞得自己很郁闷。所有打算在自己进阶阶段将这些学到的专有名词进行一下整理，不想自己以后和别人谈起这些缩写显得那么懵逼和小白","text":"经常在看博客或者面试时候，总会见到一些专有名词的缩写，比如：OOP、RMI等。搞得自己很郁闷。所有打算在自己进阶阶段将这些学到的专有名词进行一下整理，不想自己以后和别人谈起这些缩写显得那么懵逼和小白 HotSpot：捆绑热点JIT编辑器：Just-In-Time Compiler，中文意思是即时编译器","categories":[{"name":"Java进阶","slug":"Java进阶","permalink":"http://www.baiyuas.com/categories/Java进阶/"}],"tags":[{"name":"进阶","slug":"进阶","permalink":"http://www.baiyuas.com/tags/进阶/"},{"name":"专有名词","slug":"专有名词","permalink":"http://www.baiyuas.com/tags/专有名词/"}]},{"title":"缘起","slug":"缘起","date":"2017-09-11T07:14:54.000Z","updated":"2017-09-12T09:09:06.000Z","comments":true,"path":"2017/09/11/缘起/","link":"","permalink":"http://www.baiyuas.com/2017/09/11/缘起/","excerpt":"最近公司的发展不好，原因很多。所以我就想换个工作，于是在Boss直聘上投递了简历。没多久就收到了京东的面试邀请，第三天我就去了。不去还好，去了以后越来发现自己在专业技能上的不足。","text":"最近公司的发展不好，原因很多。所以我就想换个工作，于是在Boss直聘上投递了简历。没多久就收到了京东的面试邀请，第三天我就去了。不去还好，去了以后越来发现自己在专业技能上的不足。 去了以后第一个是笔试，京东有自己的笔试系统，笔试时间是40分钟，都是选择题。一共100道，需要答对40道题才可以面试。那些题我看着很面生，不过连蒙带答，勉强过了笔试。接着是他们的架构师给我面试，现在想想当时好尴尬，问什么东西我这都答不上来，好尴尬的哦。自己也很受打击。所以下定决心好好搞搞自己的基础！大致整理下面几个方面： JavaSE：主要涉及String、集合、多线程等，主要研究源码以及实现的原理，所有的学习都会分享在自己的博客中 Web前端：主要涉及Javascript(包含原型的理解、方法，对象、实例化) Mysql数据：涉及一些SQL优化、索引、Mysql一些原理和实现机制等知识 数据结构和算法：研究一些常见的算法和应用 深入理解JVM 学习线路图： 为了更好的自己，加油！","categories":[{"name":"随笔","slug":"随笔","permalink":"http://www.baiyuas.com/categories/随笔/"}],"tags":[{"name":"随笔 - 面试","slug":"随笔-面试","permalink":"http://www.baiyuas.com/tags/随笔-面试/"}]},{"title":"常用技巧篇","slug":"常用技巧篇","date":"2017-09-01T02:58:18.000Z","updated":"2017-09-18T03:15:40.000Z","comments":true,"path":"2017/09/01/常用技巧篇/","link":"","permalink":"http://www.baiyuas.com/2017/09/01/常用技巧篇/","excerpt":"","text":"本篇记录下自己百度的一些记录 hexo hexo g 生成静态页面 hexo s 启动服务 hexo clean 清空 hexo d 部署到指定博客 文章列表显示摘要，需要在文章指定位置使用&lt;!-- more --&gt; markdown 使用空格，&amp;emsp;&amp;emsp; 插入居中并且指定宽高的图片&lt;div align=&quot;center&quot;&gt; &lt;img src=&quot;http://ovpqrf5pq.bkt.clouddn.com/JVM%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA%E5%9F%9F.png&quot; alt=&quot;JVM运行时区域&quot; style=&quot;width:600px;height: 400px&quot;&gt; &lt;/div&gt;","categories":[{"name":"随笔","slug":"随笔","permalink":"http://www.baiyuas.com/categories/随笔/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.baiyuas.com/tags/hexo/"},{"name":"markdown","slug":"markdown","permalink":"http://www.baiyuas.com/tags/markdown/"}]}]}